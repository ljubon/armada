before:
  hooks:
    - go mod download
    - go mod tidy
    - go build -o ./bin/linux/server cmd/armada/main.go
    - go build -o ./bin/linux/executor cmd/executor/main.go
    - go build -o ./bin/linux/armada-load-tester cmd/armada-load-tester/main.go
    - go build -o ./bin/linux/armadactl cmd/armadactl/main.go
    - go build -o ./bin/linux/fakeexecutor cmd/fakeexecutor/main.go
    - go build -o ./bin/linux/lookout cmd/lookout/main.go
env: 
  - CGO_ENABLED=0
builds:
  - main: ./cmd/armada
    binary: "armada"
    id: "armada"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags: [-trimpath]
    ldflags: ["-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser"]
  - main: ./cmd/armada-load-tester
    binary: "armada-load-tester"
    id: "armada-load-tester"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags: [-trimpath]
    ldflags: ["-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser"]
  - main: ./cmd/executor
    binary: "executor"
    id: "executor"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags: [-trimpath]
    ldflags: ["-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser"]
  - main: ./cmd/fakeexecutor
    binary: "fakeexecutor"
    id: "fakeexecutor"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags: [-trimpath]
    ldflags: ["-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser"]
  - main: ./cmd/lookout
    binary: "lookout"
    id: "lookout"
    goos:
      - linux
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags: [-trimpath]
    ldflags: ["-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser"]
  - main: ./cmd/armadactl
    binary: "armadactl"
    id: "armadactl"
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags: [-trimpath]
    ldflags: ["-s -w -X main.version={{.Version}} -X main.commit={{.Commit}} -X main.date={{ .CommitDate }} -X main.builtBy=goreleaser"]
archives:
  - id: "armadactl-homebrew"
    builds: 
      - "armadactl"
    format: tar.gz
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"  
  - id: "armada"
    builds: ["armada","armadactl","lookout","fakeexecutor","executor","armada-load-tester"]
    name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format: zip
    wrap_in_directory: true
    replacements:
      darwin: Darwin
      linux: Linux
      windows: Windows
    files:
      - README.md
      - CONTRIBUTING.md
      - CODE_OF_CONDUCT.md
      - LICENSE
    allow_different_binary_count: true
brews: 
    # https://goreleaser.com/customization/homebrew/
    # https://docs.brew.sh/How-to-Create-and-Maintain-a-Tap
  - tap:
      owner: G-Research
      name: homebrew-armadactl
      token: "{{ .Env.GITHUB_PAT }}"
    name: armadactl
    ids:
    - "armadactl-homebrew"
    folder: Formula
    homepage: "https://github.com/G-Research/homebrew-armadactl"
    description: "Example binary distribution using homebrew"
    test: |
      system "#{bin}/armadactl help"
    install: |
      bin.install "armadactl"
    commit_author:
      name: Ljubo Nikolic # should this be updated as well?
      email: ljubonikolic@gmail.com # should this be updated as well?
nfpms:
  - id: "armadactl"
    package_name: armadactl
    file_name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    release: "{{ .Version }}"
    # Optional - override default /usr/local/bin destination for binaries
    bindir: /usr/local/bin
    builds:
      - armadactl
    formats:
      - apk
      - deb
      - rpm
snapshot:
  # Allows you to change the name of the generated snapshot
  # Note that some pipes require this to be semantic version compliant (nfpm, for example).
  name_template: "{{ .Tag }}-SNAPSHOT-{{ .ShortCommit }}"
checksum:
  name_template: '{{ .ProjectName }}_{{ .Version }}_checksums.txt'
changelog:
  sort: asc
  filters:
    exclude:
    - '^docs:'
    - '^test:'
    - go mod tidy
dockers: 
  # https://goreleaser.com/customization/docker/
  - image_templates: 
    - "gresearchdev/armada:{{ .Version }}"
    - "gresearchdev/armada:latest"
    dockerfile: ./build/armada/Dockerfile
    build_flag_templates:
    - --label=org.opencontainers.image.title={{ .ProjectName }}
    - --label=org.opencontainers.image.description={{ .ProjectName }}
    - --label=org.opencontainers.image.url=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.source=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.version={{ .Version }}
    - --label=org.opencontainers.image.revision={{ .FullCommit }}
    use_buildx: true
    extra_files:
      - ./config/armada/config.yaml
      - ./bin/linux/server
  - image_templates: 
    - "gresearchdev/armada-executor:{{ .Version }}"
    - "gresearchdev/armada-executor:latest"
    dockerfile: ./build/executor/Dockerfile
    build_flag_templates:
    - --label=org.opencontainers.image.title={{ .ProjectName }}
    - --label=org.opencontainers.image.description={{ .ProjectName }}
    - --label=org.opencontainers.image.url=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.source=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.version={{ .Version }}
    - --label=org.opencontainers.image.revision={{ .FullCommit }}
    use_buildx: true
    extra_files:
      - ./config/executor/config.yaml
      - ./bin/linux/executor
  - image_templates: 
    - "gresearchdev/armada-load-tester:{{ .Version }}"
    - "gresearchdev/armada-load-tester:latest"
    dockerfile: ./build/armada-load-tester/Dockerfile
    build_flag_templates:
    - --label=org.opencontainers.image.title={{ .ProjectName }}
    - --label=org.opencontainers.image.description={{ .ProjectName }}
    - --label=org.opencontainers.image.url=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.source=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.version={{ .Version }}
    - --label=org.opencontainers.image.revision={{ .FullCommit }}
    use_buildx: true
    extra_files:
      - ./bin/linux/armada-load-tester
  - image_templates: 
    - "gresearchdev/armadactl:{{ .Version }}"
    - "gresearchdev/armadactl:latest"
    dockerfile: ./build/armadactl/Dockerfile
    build_flag_templates:
    - --label=org.opencontainers.image.title={{ .ProjectName }}
    - --label=org.opencontainers.image.description={{ .ProjectName }}
    - --label=org.opencontainers.image.url=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.source=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.version={{ .Version }}
    - --label=org.opencontainers.image.revision={{ .FullCommit }}
    use_buildx: true
    extra_files:
      - ./bin/linux/armadactl
  - image_templates: 
    - "gresearchdev/armada-fakeexecutor:{{ .Version }}"
    - "gresearchdev/armada-fakeexecutor:latest"
    dockerfile: ./build/fakeexecutor/Dockerfile
    build_flag_templates:
    - --label=org.opencontainers.image.title={{ .ProjectName }}
    - --label=org.opencontainers.image.description={{ .ProjectName }}
    - --label=org.opencontainers.image.url=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.source=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.version={{ .Version }}
    - --label=org.opencontainers.image.revision={{ .FullCommit }}
    use_buildx: true
    extra_files:
      - ./bin/linux/fakeexecutor
      - ./config/executor/config.yaml
  - image_templates: 
    - "gresearchdev/armada-lookout:{{ .Version }}"
    - "gresearchdev/armada-lookout:latest"
    dockerfile: ./build/lookout/Dockerfile
    build_flag_templates:
    - --label=org.opencontainers.image.title={{ .ProjectName }}
    - --label=org.opencontainers.image.description={{ .ProjectName }}
    - --label=org.opencontainers.image.url=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.source=https://github.com/G-Research/armada
    - --label=org.opencontainers.image.version={{ .Version }}
    - --label=org.opencontainers.image.revision={{ .FullCommit }}
    use_buildx: true
    extra_files:
      - internal/lookout/ui/build/
      - ./bin/linux/lookout
      - ./config/lookout/config.yaml
