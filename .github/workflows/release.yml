# Pre-merge TODO list
# 1. Change hub.docker.com account (repository)
# 2. Update SSH credentials (use old ones from config.yml)
# 3. Token for publishing release
name: Release

env:
  GO111MODULE: "on"
  GOPATH: "/home/runner/work/armada/armada/go"
  GOCACHE: "/home/runner/.cache/go-build"

on: 
  push:
    tags: 
      - 'v*'

defaults:
  run:
    shell: bash

jobs:
  release:
    name: Release
    runs-on: ubuntu-20.04
    permissions: write-all
    env:
      GO111MODULE: "on"
    # container:
    #   image: cimg/go:1.16.2
    #   options: --user root
    steps:
      - name: Checkout code into the Go module directory
        uses: actions/checkout@v2
        with:
          path: ${{ env.GOPATH }}/src/github.com/G-Research/armada
          persist-credentials: true

      - name: Build armadactl release artifacts
        run: |
          TAG=${GITHUB_REF##*/}
          echo $TAG
          pwd
          make build-armadactl-release RELEASE_VERSION=${TAG}
        working-directory: ${{ env.GOPATH }}/src/github.com/G-Research/armada

      - name: Archive production artifacts  
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: |
            ${{ env.GOPATH }}/src/github.com/G-Research/armada/dist/*


      - name: Upload artifacts to Github release
        uses: ncipollo/release-action@v1.8.6
        with:
          artifacts: "${{ env.GOPATH }}/src/github.com/G-Research/armada/dist/*"
          token: ${{ secrets.RELEASE_TOKEN }}
          tag: ${{ github.event.release.tag_name }} 

      - name: Checkout G-Research/Charts repo
        uses: actions/checkout@v2
        with:
          repository: ljubon/charts
          path: ${{ env.GOPATH }}/src/github.com/G-Research/armada/charts
          fetch-depth: 0
          persist-credentials: true

      - name: Update version, appVersion and image tag to match current $RELEASE_TAG #TODO change creds
        run: |
          RELEASE_TAG=${GITHUB_REF##*/}
          echo release version is $RELEASE_TAG
          ls -larth ${{ env.GOPATH }}/src/github.com/G-Research/armada/charts
          find . \( -name "Chart.yaml" -o -name "values.yaml" \) -exec sed -i s/LATEST/$RELEASE_TAG/ {} +
        working-directory: ${{ env.GOPATH }}/src/github.com/G-Research/armada

      - name: Build new packages and index.yaml
        run: |
          helm package deployment/armada/ -d charts/armada/
          helm package deployment/executor -d charts/armada/
          helm package deployment/executor-cluster-monitoring/ -d charts/armada/
          helm package deployment/lookout/ -d charts/armada/
          helm package deployment/lookout-migration/ -d charts/armada/
          helm repo index charts/
        working-directory: ${{ env.GOPATH }}/src/github.com/G-Research/armada

      - name: Commit & Push changes
        uses: actions-js/push@master
        with:
          author_name: "Ljubo Nikolic"
          author_email: "ljubonikolic@gmail.com"
          message: "Pushing new Helm charts at version ${{ github.event.release.tag_name }}"
          github_token: ${{ secrets.GITHUB_TOKEN }} # ${{ secrets.PAT_LJUBOOPS }}
          # tags: ${{ github.event.release.tag_name }} 
          directory: "${{ env.GOPATH }}/src/github.com/G-Research/armada/charts"
          repository: ljubon/charts


      # - name: Commit and push updated charts
      #   run: |
      #     RELEASE_TAG=${GITHUB_REF##*/}
      #     cd charts
      #     git checkout -b circlci-armada_$RELEASE_TAG
      #     git add ./armada
      #     git -c user.name='GR OSS' -c user.email=github@gr-oss.io commit -qam "Pushing new helm charts at version $RELEASE_TAG"
      #     eval "$(ssh-agent -s)"
      #     echo -e "$ARMADA_CHART_UPDATE_KEY" | ssh-add - > /dev/null
      #     git push -q origin HEAD
      #   working-directory: ${{ env.GOPATH }}/src/github.com/G-Research/armada


  # release-dotnet-client:
  #   name: Release DotNet client
  #   needs: [build]
  #   runs-on: ubuntu-20.04
  #   container:
  #     image: mcr.microsoft.com/dotnet/core/sdk:3.0.101-alpine3.10
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #     - name: Install Go
  #       uses: actions/setup-go@v2
  #       with:
  #         go-version: '1.16'
  #     - name: Set repo
  #       run: |
  #         mkdir -p $GOPATH/src/github.com/G-Research/armada
  #         cp -ar $GITHUB_WORKSPACE $GOPATH/src/github.com/G-Research/
  #         ls -larth $GOPATH/src/github.com/G-Research/armada/.

  #     - name: Release dotnet client
  #       run: |
  #         cd $GOPATH/src/github.com/G-Research/armada/
  #         RELEASE_TAG=${CIRCLE_TAG#"v"}
  #         dotnet pack client/DotNet/Armada.Client/Armada.Client.csproj -c Release -p:PackageVersion=${RELEASE_TAG} -o ./bin/client/DotNet
  #         dotnet nuget push ./bin/client/DotNet/G-Research.Armada.Client.${RELEASE_TAG}.nupkg -k ${NUGET_API_KEY} -s https://api.nuget.org/v3/index.json

      # - name: Archive production artifacts
      #   uses: actions/upload-artifact@v2
      #   with:
      #     name: dist
      #     path: |
      #       ${{ env.GOPATH }}/src/github.com/G-Research/armada/bin/client/DotNet/*